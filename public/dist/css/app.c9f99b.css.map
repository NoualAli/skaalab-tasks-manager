{"version":3,"file":"dist/css/app.c9f99b.css","mappings":";;;;;;;;;;;;AACA,cACE,cAEA,gBADA,aAEA,iBAAF,CAEE,uBACE,cAEA,eACA,gBACA,qBAHA,eAIA,qBACA,wBAAJ,C;ACkGA,wCAEI,oCACJ,CAEA,sEAEI,oCACJ,CAEA,0DAEI,4BACJ,CAEA,gEAEI,mBACJ,C","sources":["webpack:///./resources/js/layouts/basic.vue","webpack:///./resources/js/components/NLModal.vue"],"sourcesContent":["\r\n.basic-layout {\r\n  color: #636b6f;\r\n  height: 100vh;\r\n  font-weight: 100;\r\n  position: relative;\r\n\r\n  .links > a {\r\n    color: #636b6f;\r\n    padding: 0 25px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    letter-spacing: .1rem;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n  }\r\n}\r\n","<template>\n    <Transition name=\"modal\">\n        <div class=\"modal\" v-if=\"show\" :class=\"{ 'active': isOpen, 'reduced': isReduced, 'expanded': isExpanded }\">\n            <div class=\"modal-overlay\" @click.stop=\"close\"></div>\n            <div class=\"modal-card\">\n                <header class=\"modal-header\">\n                    <NLGrid extraClass=\"w-100\">\n                        <NLColumn lg=\"11\" sm=\"11\" md=\"11\">\n                            <h3>\n                                <slot name=\"title\" v-if=\"!isLoading\"></slot>\n                            </h3>\n                        </NLColumn>\n                        <NLColumn lg=\"1\" sm=\"1\" md=\"1\" extraClass=\"d-flex align-center justify-end\">\n                            <NLFlex alignItems=\"center\" lgJustifyContent=\"end\" justifyContent=\"end\" gap=\"3\">\n                                <i class=\"las la-expand icon modal-action-icon modal-expand-button\"\n                                    @click.prevent=\"handleExpansion\" v-if=\"!isExpanded\" title=\"Agrandir (alt + e)\"></i>\n                                <i class=\"las la-compress icon modal-action-icon modal-reduce-button\"\n                                    @click.prevent=\"handleExpansion\" v-else title=\"Minimiser (alt + e)\"></i>\n                                <i class=\"las la-times icon modal-action-icon modal-close-button\" @click.stop=\"close\"\n                                    title=\"Fermer (Ã©chape)\"></i>\n                            </NLFlex>\n                        </NLColumn>\n                    </NLGrid>\n                </header>\n                <main class=\"modal-body\">\n                    <slot v-if=\"!isLoading\"></slot>\n                    <div class=\"component-loader-container\" v-else>\n                        <div class=\"component-loader\"></div>\n                        <div class=\"component-loader-text\">\n                            Chargement en cours\n                        </div>\n                    </div>\n                </main>\n                <footer class=\"modal-footer\" v-if=\"showFooter\">\n                    <NLColumn extraClass=\"d-flex justify-end align-center gap-2\" v-if=\"!isLoading\">\n                        <slot name=\"footer\"></slot>\n                    </NLColumn>\n                </footer>\n            </div>\n        </div>\n    </Transition>\n</template>\n\n<script>\nexport default {\n    name: 'NLModal',\n    props: {\n        show: { type: [ Boolean, Array, Object, null ], required: true },\n        defaultMode: { type: Boolean, default: false },\n        isLoading: { type: Boolean, default: false },\n    },\n    emits: [ 'isExpanded', 'isReduced', 'close' ],\n    data() {\n        return {\n            isExpanded: false,\n            isReduced: false,\n            showFooter: false\n        }\n    },\n    computed: {\n        isOpen() {\n            return this.show\n        }\n    },\n    watch: {\n        show() {\n            if (!this.show) {\n                window.removeEventListener('keydown', this)\n            } else {\n                window.addEventListener('keydown', (e) => {\n                    this.handleKeyboard(e)\n                })\n            }\n        }\n    },\n    created() {\n        this.setShowSlots()\n        this.isExpanded = this.defaultMode\n    },\n    beforeUpdate() {\n        this.setShowSlots()\n    },\n    methods: {\n        handleKeyboard(e) {\n            if (e.key === 'e' && e.altKey) {\n                e.preventDefault()\n                this.handleExpansion()\n            }\n            if (e.key === 'Escape') {\n                e.preventDefault()\n                this.close()\n            }\n        },\n        close() {\n            this.$emit('close')\n        },\n        setShowSlots() {\n            this.showFooter = this.$slots.footer\n            // console.log(this.$slots.footer()[ 0 ].children.default());\n        },\n        handleExpansion() {\n            this.isExpanded = !this.isExpanded\n            this.$emit('isExpanded', this.isExpanded)\n        },\n        handleReduce() {\n            this.isReduced = !this.isReduced\n            this.$emit('isReduced', this.isReduced)\n        }\n    }\n}\n</script>\n<style>\n.modal-enter-active,\n.modal-leave-active {\n    transition: .4s ease-in-out !important;\n}\n\n.modal-enter-active .modal-overlay,\n.modal-leave-active .modal-overlay {\n    transition: .6s ease-in-out !important;\n}\n\n.modal-enter-from .modal-card,\n.modal-leave-to .modal-card {\n    transform: scale(0) !important;\n}\n\n.modal-enter-from .modal-overlay,\n.modal-leave-to .modal-overlay {\n    opacity: 0 !important;\n}\n</style>\n"],"names":[],"sourceRoot":""}