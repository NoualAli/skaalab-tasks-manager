{"version":3,"file":"dist/js/ef7b5a6961e41939.js","mappings":";+IAMoBA,EAAAA,EAAAA,oBAA+B,KAA5BC,MAAM,mBAAiB,2QAQ9C,8lGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,8zBACA,SACIC,OAAQ,aACRC,WAAY,CAAE,QACdC,SAAQ,WACJ,MAAO,CAAEC,MAAO,yBACpB,EACAC,KAAM,WACF,MAAO,CACHC,QAAS,CACL,CACIC,MAAO,QACPC,MAAO,QACPC,WAAY,CACRC,GAAI,SAACC,GACD,OAAQA,EAAKC,QAAqC,GAA3B,wBAC3B,IAGR,CACIL,MAAO,WACPC,MAAO,aACPC,WAAY,CACRC,GAAI,SAACC,GACD,OAAQA,EAAKC,QAAqC,GAA3B,wBAC3B,IAGR,CACIL,MAAO,UACPC,MAAO,gBACPK,QAAQ,EACRJ,WAAY,CACRC,GAAI,SAACC,GACD,OAAQA,EAAKC,QAAqC,GAA3B,wBAC3B,IAGR,CACIL,MAAO,OACPC,MAAO,aACPC,WAAY,CACRC,GAAI,SAACC,GACD,OAAQA,EAAKC,QAAqC,GAA3B,wBAC3B,KAKpB,EACAE,QAAO,WACHC,KAAKC,OAAOC,SAAS,8BAA8B,GACnDF,KAAKG,YACT,EACAC,QAAS,CAMLC,KAAI,SAACT,GACD,MAA6B,IAAIU,IAAIV,EAAKW,KAAlCC,EAAQ,EAARA,SAAUC,EAAK,EAALA,OAClB,OAAOT,KAAKU,QAAQC,KAAK,CAAEC,KAAMJ,EAAUK,MAAOC,OAAOC,YAAY,IAAIC,gBAAgBP,KAC7F,EAMAQ,SAAQ,SAACrB,GACL,GAAIA,EAAKW,IACL,OAAOX,EAAKW,IAEZ,IAAMW,EAAYtB,EAAKsB,UACjBC,EAAKvB,EAAKwB,QAEhB,MAAO,CAAEC,KADSzB,EAAK0B,UACGC,OAAQ,EAAF,GAAML,EAAaC,GAE3D,EAIMhB,WAAU,WAAG,OAlF3B,EAkF2B,wGACTqB,EAAAA,EAAAA,IAAQ,iBAAe,0CAnFzC,sLAoFQ,IC7FR,MAEA,GAFiC,aAAgB,EAAQ,CAAC,CAAC,mJDJvDC,EAAAA,EAAAA,aAScC,EAAAA,KAAAA,wBARV,iBAOc,EAPdC,EAAAA,EAAAA,aAOcC,EAAAA,CAPArC,QAASsC,EAAAA,QAASxC,MAAM,0BAA0ByC,UAAU,gBACrEC,aAAU,gCAAa9B,OAAOC,SAAS,8BAA8B,EAA/B,KAC5B,iBAAa,cACpB,gBADwBN,EAAI,EAAJA,KAAI,OAC8CA,EAAKW,MAAG,kBAAlFyB,EAAAA,EAAAA,oBAES,gBAFDhD,MAAM,2BAA4BiD,SAAK,uCAAOC,EAAAA,KAAKtC,EAAI","sources":["webpack:///./resources/js/pages/notifications/index.vue","webpack:///./resources/js/pages/notifications/index.vue?45ed"],"sourcesContent":["<template>\n    <ContentBody>\n        <NLDatatable :columns=\"columns\" title=\"Liste des notifications\" urlPrefix=\"notifications\"\n            @dataLoaded=\"() => this.$store.dispatch('settings/updatePageLoading', false)\">\n            <template #actions-after=\"{ item }\">\n                <button class=\"btn btn-success has-icon\" @click.stop=\"show(item)\" v-if=\"!!item.url\">\n                    <i class=\"las la-eye icon\"></i>\n                </button>\n            </template>\n        </NLDatatable>\n    </ContentBody>\n</template>\n\n<script>\nimport api from '../../plugins/api'\nexport default {\n    layout: 'MainLayout',\n    middleware: [ 'auth' ],\n    metaInfo() {\n        return { title: 'Centre de notification' }\n    },\n    data: () => {\n        return {\n            columns: [\n                {\n                    label: 'Titre',\n                    field: 'title',\n                    extraClass: {\n                        td: (item) => {\n                            return !item.read_at ? 'bg-primary-extra-light' : '';\n                        },\n                    },\n                },\n                {\n                    label: 'Emis par',\n                    field: 'emitted_by',\n                    extraClass: {\n                        td: (item) => {\n                            return !item.read_at ? 'bg-primary-extra-light' : '';\n                        },\n                    },\n                },\n                {\n                    label: 'Contenu',\n                    field: 'short_content',\n                    isHtml: true,\n                    extraClass: {\n                        td: (item) => {\n                            return !item.read_at ? 'bg-primary-extra-light' : '';\n                        },\n                    },\n                },\n                {\n                    label: 'Date',\n                    field: 'created_at',\n                    extraClass: {\n                        td: (item) => {\n                            return !item.read_at ? 'bg-primary-extra-light' : '';\n                        },\n                    },\n                },\n            ],\n        }\n    },\n    created() {\n        this.$store.dispatch('settings/updatePageLoading', true)\n        this.markAsRead()\n    },\n    methods: {\n        /**\n         * Affiche l'élément seléctionner\n         *\n         * @param {Object} item\n         */\n        show(item) {\n            const { pathname, search } = new URL(item.url)\n            return this.$router.push({ path: pathname, query: Object.fromEntries(new URLSearchParams(search)) })\n        },\n        /**\n         * Formate les différentes informations pour créer la route d'action\n         *\n         * @param {Object} item\n         */\n        getRoute(item) {\n            if (item.url) {\n                return item.url\n            } else {\n                const paramName = item.paramName\n                const id = item.modelId\n                const routeName = item.routeName\n                return { name: routeName, params: { [ paramName ]: id } }\n            }\n        },\n        /**\n         * Marque les notifications comme lu\n         */\n        async markAsRead() {\n            await api.put('notifications')\n        }\n    }\n}\n</script>\n","import { render } from \"./index.vue?vue&type=template&id=693e568d\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\skaalab\\\\task-management\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","i","layout","middleware","metaInfo","title","data","columns","label","field","extraClass","td","item","read_at","isHtml","created","this","$store","dispatch","markAsRead","methods","show","URL","url","pathname","search","$router","push","path","query","Object","fromEntries","URLSearchParams","getRoute","paramName","id","modelId","name","routeName","params","api","_createBlock","_component_ContentBody","_createVNode","_component_NLDatatable","_ctx","urlPrefix","onDataLoaded","_createElementBlock","onClick","$options"],"sourceRoot":""}